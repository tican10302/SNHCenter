@model DTO.Category.Shift.Dtos.ShiftDto

@{
var daysOfWeek = new List<string> { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
var selectDays = Model.SelectDays ?? new List<string>();
}

<div class="modal-content modal-snhcenter" id="modalLoading">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmShift", @class = "form-detail" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-header">
            @if (!Model.IsEdit)
            {
                <h4 class="modal-title">Create Shift</h4>
            }
            else
            {
                <h4 class="modal-title">Update Shift</h4>
            }
            <button type="button" class="btn-close" onclick="closePopup();" aria-label="Close" data-bs-dimiss="modal"></button>
        </div>
        
        <div class="modal-body">
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.IsEdit)
            <div class="row form-group">
                <label class="col-sm-2 form-label">Name <span class="text-danger">(*)</span></label>
                <div class="col-sm-4">
                    @(Html.TextBoxFor(model => model.Name, new { @placeholder = "Enter name" }))
                    @(Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger" }))
                </div>
                <label class="col-sm-2 form-label">Time <span class="text-danger">(*)</span></label>
                <div class="col-sm-4">
                    @(Html.TextBoxFor(model => model.Time, new { @type = "time", @placeholder = "Select a time" }))
                    @(Html.ValidationMessageFor(model => model.Time, "", new {@class = "text-danger" }))
                </div>
            </div>
            <div class="row form-group">
                <label class="col-sm-12 form-label">Days <span class="text-danger">(*)</span></label>
                @for (int i = 0; i < daysOfWeek.Count; i++)
                {
                var day = daysOfWeek[i];
                bool isChecked = selectDays.Contains(day);

                <div class="col-sm-3">
                    @Html.Hidden($"SelectDays[{i}]", isChecked ? day : "false")
                    @Html.CheckBox($"DayCheckbox[{i}]", isChecked, new { @value = day, @style = "width: auto;" })
                    @Html.Label(day)
                </div>
                }
                    @(Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" }))
            </div>
        </div>
        
        <div class="modal-footer">
            <button type="submit" id="btnSave" class="btn btn-success btn-sm"><i class="fas fa-check-square"></i> @(Model.IsEdit ? "Update" : "Create")</button>
            <button type="button" class="btn btn-danger btn-sm" onclick="closePopup();"><i class="fas fa-times-square"></i> Cancel</button>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        $("#frmShift").find("span.field-validation-valid").hide();
        
        //Save
        $("#frmShift").submit(async function (event) {
            event.preventDefault();
            $("#frmShift").find("span.field-validation-valid").show();
            
            if ($("#frmShift").valid()) {
                showLoading();

                $.ajax({
                    url: '/Shift/Post',
                    type: "POST",
                    data: $("#frmShift").serialize(),
                    success: function (data) {
                        if (data.IsSuccess) {
                            if (data.Data) {
                                notyf.success(updateSuccess);
                            }
                            else {
                                notyf.success(addSuccess);
                            }
                            refreshGrid();
                            closePopup();
                        }
                        else {
                            notyf.error(data.Message);
                        }
                    }
                });
                hideLoading();
            }
        });
    })
    function closePopup() {
        $('#modal-default').modal('hide');
    }
</script>
